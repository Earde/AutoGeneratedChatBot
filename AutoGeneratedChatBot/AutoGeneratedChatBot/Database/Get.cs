using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AutoGeneratedChatBot.Database
{
    class Get
    {
        //create sentence
        public static string GetSentence(SqlConnection conn, Random rand, int stopIndex, bool story)
        {
            List<int> wordIndexes = new List<int>();
            int wordIndex = GetRandomStartWord(conn);
            wordIndexes.Add(wordIndex);
            int sentenceSize = 0;
            while (wordIndex != stopIndex)
            {
                sentenceSize++;
                List<Connection> connections = GetConnections(conn, wordIndex);
                if (story && sentenceSize < 2000)
                {
                    int stopIndexConn = -1;
                    foreach (Connection c in connections)
                    {
                        stopIndexConn++;
                        if (c.second == stopIndex)
                        {
                            c.count = 1;
                            break;
                        }
                    }
                    if (connections.Count > 1)
                    {
                        connections.RemoveAt(stopIndexConn);
                    }
                }
                int totalCount = connections.Sum(c => c.count);
                int random = rand.Next(totalCount) + 1;
                int count = 0;
                foreach (Connection c in connections)
                {
                    count += c.count;
                    if (count >= random)
                    {
                        wordIndex = c.second;
                        if (wordIndex != stopIndex)
                        {
                            wordIndexes.Add(wordIndex);
                        }
                        break;
                    }
                }
            }
            if (wordIndexes.Count > 0)
            {
                return GetWordsForSentence(conn, wordIndexes);
            }
            return "";
        }

        private static string GetWordsForSentence(SqlConnection conn, List<int> wordIndexes)
        {
            string sentence = "";
            for (int i = 0; i < wordIndexes.Count; i++)
            {
                using (SqlCommand command = new SqlCommand("SELECT word FROM Words WHERE id=@id", conn))
                {
                    command.Parameters.AddWithValue("@id", wordIndexes[i]);
                    using (SqlDataReader reader = command.ExecuteReader())
                    {
                        if (reader.HasRows)
                        {
                            if (reader.Read())
                            {
                                sentence += (string)(reader.GetValue(0)) + " ";
                            }
                        }
                    }
                }
            }

            return sentence;
        }

        private static List<Connection> GetConnections(SqlConnection conn, int wordIndex)
        {
            List<Connection> connections = new List<Connection>();
            using (SqlCommand command = new SqlCommand("SELECT secondId, count FROM Connections WHERE firstId=@id", conn))
            {
                command.Parameters.AddWithValue("@id", wordIndex);
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.HasRows)
                    {
                        while (reader.Read())
                        {
                            Connection connection = new Connection();
                            connection.first = wordIndex;
                            connection.second = (int)(reader.GetValue(0));
                            connection.count = (int)(reader.GetValue(1));
                            connections.Add(connection);
                        }
                    }
                }
            }
            return connections;
        }

        private static int GetRandomStartWord(SqlConnection conn)
        {
            using (SqlCommand command = new SqlCommand("SELECT TOP 1 wordId FROM StartWords ORDER BY NEWID()", conn))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.HasRows)
                    {
                        if (reader.Read())
                        {
                            return (int)(reader.GetValue(0));
                        }
                    }
                }
            }
            return -1;
        }

        public static int UniqueConnectionCombination(SqlConnection conn)
        {
            using (SqlCommand command = new SqlCommand("SELECT COUNT(*) FROM Connections", conn))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.HasRows)
                    {
                        if (reader.Read())
                        {
                            return (int)(reader.GetValue(0));
                        }
                    }
                }
            }
            return -1;
        }

        public static int TotalConnectionCombination(SqlConnection conn)
        {
            using (SqlCommand command = new SqlCommand("SELECT SUM(count) FROM Connections", conn))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.HasRows)
                    {
                        if (reader.Read())
                        {
                            return (int)(reader.GetValue(0));
                        }
                    }
                }
            }
            return -1;
        }

        public static int TotalWords(SqlConnection conn)
        {
            using (SqlCommand command = new SqlCommand("SELECT COUNT(id) FROM Words", conn))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.HasRows)
                    {
                        if (reader.Read())
                        {
                            return (int)(reader.GetValue(0));
                        }
                    }
                }
            }
            return -1;
        }

        public static int TotalStartWords(SqlConnection conn)
        {
            using (SqlCommand command = new SqlCommand("SELECT COUNT(wordId) FROM StartWords", conn))
            {
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.HasRows)
                    {
                        if (reader.Read())
                        {
                            return (int)(reader.GetValue(0));
                        }
                    }
                }
            }
            return -1;
        }
    }
}
