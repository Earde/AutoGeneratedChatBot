using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AutoGeneratedChatBot.Database
{
    class Append
    {
        //Add words + connections to database
        public static void AddWords(SqlConnection conn, string[] words)
        {
            //return if words contains only a dot
            if (words.Length < 2)
            {
                return;
            }
            int[] wordIndexes = new int[words.Length];
            for (int i = 0; i < words.Length; i++)
            {
                int wordIndex = GetWordIndex(conn, words[i]);
                if (wordIndex == -1)
                {
                    wordIndex = SetWordIndex(conn, words[i]);
                }
                wordIndexes[i] = wordIndex;
            }
            for (int i = 0; i < wordIndexes.Length - 1; i++)
            {
                if (i == 0)
                {
                    SetStartWord(conn, wordIndexes[i]);
                    /*
                    if (!IncreaseStartWord(wordIndexes[0]))
                    {
                        SetStartWord(wordIndexes[0]);
                    }
                    */
                }
                if (!IncreaseConnection(conn, wordIndexes[i], wordIndexes[i + 1]))
                {
                    SetConnection(conn, wordIndexes[i], wordIndexes[i + 1]);
                }
            }
        }

        //set Connections.sql
        private static void SetConnection(SqlConnection conn, int firstId, int secondId)
        {
            using (SqlCommand command = new SqlCommand("INSERT INTO Connections (firstId, secondId) VALUES (@first, @second)", conn))
            {
                command.Parameters.AddWithValue("@first", firstId);
                command.Parameters.AddWithValue("@second", secondId);
                command.ExecuteNonQuery();
            }
        }

        private static bool IncreaseConnection(SqlConnection conn, int firstId, int secondId)
        {
            using (SqlCommand command = new SqlCommand("UPDATE Connections SET count = count + 1 output INSERTED.* WHERE firstId=@first AND secondId=@second", conn))
            {
                command.Parameters.AddWithValue("@first", firstId);
                command.Parameters.AddWithValue("@second", secondId);
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.HasRows)
                    {
                        if (reader.Read())
                        {
                            int first = (int)(reader.GetValue(0));
                            int second = (int)(reader.GetValue(1));
                            return first == firstId && second == secondId;
                        }
                    }
                }
            }
            return false;
        }

        //set StartWords.sql
        private static bool SetStartWord(SqlConnection conn, int wordId)
        {
            using (SqlCommand command = new SqlCommand("INSERT INTO StartWords (wordId) output INSERTED.wordId VALUES (@id)", conn))
            {
                command.Parameters.AddWithValue("@id", wordId);
                return (int)command.ExecuteScalar() == wordId;
            }
        }

        /*
        public bool IncreaseStartWord(int wordId)
        {
            using (SqlCommand command = new SqlCommand("UPDATE StartWords SET count = count + 1 output INSERTED.wordId WHERE wordId=@id", conn))
            {
                command.Parameters.AddWithValue("@id", wordId);
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.HasRows)
                    {
                        if (reader.Read())
                        {
                            return (int)(reader.GetValue(0)) == wordId;
                        }
                    }
                }
            }
            return false;
        }
        */

        //set Words.sql
        public static int GetWordIndex(SqlConnection conn, string word)
        {
            using (SqlCommand command = new SqlCommand("SELECT id FROM Words WHERE word=@w COLLATE SQL_Latin1_General_CP1_CS_AS", conn))
            {
                command.Parameters.AddWithValue("@w", word);
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    if (reader.HasRows)
                    {
                        if (reader.Read())
                        {
                            return (int)(reader.GetValue(0));
                        }
                    }
                }
            }
            return -1;
        }

        private static int SetWordIndex(SqlConnection conn, string word)
        {
            using (SqlCommand command = new SqlCommand("INSERT INTO Words (word) output INSERTED.id VALUES (@w)", conn))
            {
                command.Parameters.AddWithValue("@w", word);
                return (int)command.ExecuteScalar();
            }
        }
    }
}
